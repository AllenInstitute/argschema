# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

workflows:
  version: 2
  build:
    jobs:
      - test-python-3.6.1
      - merge:
          requires:
              - test-python-3.6.1
          filters:
            branches:
              only: dev
      - package:
          requires:
              - test-python-3.6.1
              - merge
          filters:
            branches:
              only: dev
jobs:
  merge:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.6.1
    steps:
      - add_ssh_keys:
          fingerprints:
            - "98:e6:90:a7:1e:c6:8f:77:a0:52:04:29:6f:27:6e:1a"
      - checkout
      - restore_cache:
          keys:
          - python3-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "test_requirements.txt"}}
          # fallback to using the latest cache if no exact match is found
          - python3-dependencies-
      - run:
          name: increment version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py install
            python .circleci/increment_version.py
      - run:
          name: merge develop into master
          command: |
            .circleci/circle_master_merge.sh

  package:
    working_directory: ~/repo


    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - restore_cache:
          keys:
          - python3-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "test_requirements.txt"}}
          # fallback to using the latest cache if no exact match is found
          - python3-dependencies-
      - run:
          name: package for pypi
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install twine
            pip install wheel
            .circleci/circle_dist.sh

  test-python-3.6.1:
    working_directory: ~/repo
    docker:
        - image: circleci/python:3.6.1
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - python3-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "test_requirements.txt"}}
          # fallback to using the latest cache if no exact match is found
          - python3-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            sed '/pywin32/d' test_requirements.txt > test_requirements_nowin.txt
            pip install -r test_requirements_nowin.txt
            pip install -e .

      - save_cache:
          paths:
            - ./venv
          key: python3-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "test_requirements.txt"}}
        
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest test/
            bash <(curl -s https://codecov.io/bash)

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports
          destination: test-reports
